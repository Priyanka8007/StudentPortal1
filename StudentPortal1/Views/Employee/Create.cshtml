@model StudentPortal1.Models.Dtos.EmployeeDto

@{
    ViewData["Title"] = "Create Employee";
}

<h2>Create Employee</h2>

<form asp-action="Create" method="post" class="form-horizontal">
    <div class="form-group">
        <label asp-for="EmpName" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="EmpName" class="form-control" />
            <span asp-validation-for="EmpName" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Age" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Age" class="form-control" />
            <span asp-validation-for="Age" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Gender" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Gender" class="form-control" />
            <span asp-validation-for="Gender" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Designation" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Designation" class="form-control" />
            <span asp-validation-for="Designation" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Email" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="CountryId" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="CountryId" class="form-control" asp-items="ViewBag.Countries">
                <option value="">-- Select Country --</option>
            </select>
            <span asp-validation-for="CountryId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="StateId" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="StateId" class="form-control" asp-items="ViewBag.States">
                <option value="">-- Select State --</option>
            </select>
            <span asp-validation-for="StateId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="CityId" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="CityId" class="form-control" asp-items="ViewBag.Cities">
                <option value="">-- Select City --</option>
            </select>
            <span asp-validation-for="CityId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Pincode" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Pincode" class="form-control" />
            <span asp-validation-for="Pincode" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</form>
<div id="employee-card-container">
    <!-- Employee card will be inserted here -->
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


        <script src="https://code.jquery.com/jquery-3.6.0.min.js" ></script>
    <script>
        $(document).ready(function () {

            $('#employeeForm').submit(function (event) {
                event.preventDefault(); // Prevent the form from submitting via the browser

                $.ajax({
                    url: '@Url.Action("Create", "Employee")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            var employee = response.employee;
                            var cardHtml =
                                '<div class="card" style="width: 18rem;">' +
                                '<img class="card-img-top" src="' + (employee.gender.toLowerCase() == 'male' ? '/images/cardjs/rr.jpg' : '/images/cardjs/female.jpg') + '" alt="Employee image">' +
                                '<div class="card-body">' +
                                '<h5 class="card-title">' + employee.empName + '</h5>' +
                                '<p class="card-text">' + employee.designation + '</p>' +
                                '</div>' +
                                '</div>';
                            $('#employee-card-container').html(cardHtml);
                        } else {
                            // Display validation errors
                            alert('Failed to create employee: ' + response.errors.join(', '));
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', status, error);
                        alert('Failed to create employee.');
                    }
                });
            });


            $('#CountryId').change(function () {
                var countryId = $(this).val();
                if (countryId) {
                    $.get('@Url.Action("GetStatesByCountry", "Employee")', { countryId: countryId }, function (data) {
                        var stateDropdown = $('#StateId');
                        stateDropdown.empty();
                        stateDropdown.append('<option value="">-- Select State --</option>');
                        $.each(data, function (index, item) {
                            stateDropdown.append(new Option(item.name, item.stateId));
                        });
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error getting states: ", textStatus, errorThrown);
                    });
                } else {
                    $('#StateId').empty().append('<option value="">-- Select State --</option>');
                    $('#CityId').empty().append('<option value="">-- Select City --</option>');
                }
            });

           $('#StateId').change(function () {
    var stateId = $(this).val();
    console.log("Selected State ID: " + stateId); // Debugging statement
    if (stateId) {
                    var url = '@Url.Action("GetCitiesByState", "Employee")/' + stateId;
        console.log("Request URL: " + url); // Log the URL

        $.get(url, function (data) {
            console.log("Response data:", data); // Log response data
            var cityDropdown = $('#CityId');
            cityDropdown.empty();
            cityDropdown.append('<option value="">-- Select City --</option>');
            $.each(data, function (index, item) {
                cityDropdown.append(new Option(item.name, item.cityId));
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            console.error("Error getting cities: ", textStatus, errorThrown);
            console.error("Response Text: " + jqXHR.responseText); // Log response text
            console.error("Status: " + jqXHR.status); // Log status
        });
    } else {
        $('#CityId').empty().append('<option value="">-- Select City --</option>');
    }
});

        });
    </script>
}
<a asp-action="Index" class="btn btn-secondary">Back to List</a>